#######################################################
# 
# CoffeeShopDecorator.py
# Python implementation of the Class Cappuccino
# Generated by Enterprise Architect
# Created on:      10-Dec-2018 10:25:56
# Original author: Charles
# 
#######################################################
from Shop.CoffeeShopDec.CoffeeShopDecorator import Decorator, DrinkComponent



class Decorator(DrinkComponent, DrinkComponent):
    def __init__(self, drinkComponent):
        pass

    def getTotalCost(self):
        pass

    def getDescription(self):
        pass

class DrinkComponent:
    """Decorator/alldecorators/CoffeeShop.py Coffee example using decorators
    """
    def getDescription(self):
        pass

    def getTotalCost(self):
        pass

class Cappuccino(Decorator, Decorator):
    cost = 2.95
    def __init__(self, drinkComponent):
        pass

class Latte(Decorator, Decorator):
    cost = 3.10
    def __init__(self, drinkComponent):
        pass

class MilkFroth(Decorator, Decorator):
    cost = 0.50
    def __init__(self, drinkComponent):
        pass

class Sugar(Decorator, Decorator):
    cost = 0.10
    def __init__(self, drinkComponent):
        pass